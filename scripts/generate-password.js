#!/usr/bin/env node

const bcrypt = require('bcryptjs');

async function generateHash() {
  const password = "MySecureAdminPass123!";
  const saltRounds = 12;
  
  try {
    const hash = await bcrypt.hash(password, saltRounds);
    
    console.log('\nüîê Password Hash Generated Successfully!');
    console.log('==========================================');
    console.log(`Password: ${password}`);
    console.log(`Hash: ${hash}`);
    console.log('\nüìù Add this to your .env.local file:');
    console.log(`ADMIN_PASSWORD_HASH=${hash}`);
    console.log('\n‚úÖ Security Features Implemented:');
    console.log('   ‚Ä¢ bcrypt password hashing (12 rounds)');
    console.log('   ‚Ä¢ Rate limiting (5 attempts per 15 min)');
    console.log('   ‚Ä¢ HTTP-only secure cookies');
    console.log('   ‚Ä¢ Security headers');
    console.log('   ‚Ä¢ HTTPS enforcement (production)');
    console.log('   ‚Ä¢ Brute force protection');
    console.log('\n‚ö†Ô∏è  Remember:');
    console.log('   ‚Ä¢ Keep your password secure');
    console.log('   ‚Ä¢ Never commit .env files to version control');
    console.log('   ‚Ä¢ Change this password regularly');
    console.log('\nüöÄ Your admin panel is now much more secure!\n');
    
  } catch (error) {
    console.error('Error generating hash:', error);
  }
}

generateHash(); 